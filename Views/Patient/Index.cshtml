@model IndexPatientViewModel
@{
	ViewData["Title"] = "Mes Patients";
}

<div class="toast-container position-fixed bottom-0 end-0 p-3">
	@if (TempData["SuccessMessage"] != null)

	{
		<div class="toast align-items-center border-0 bg-primary text-white" role="alert" aria-live="assertive" aria-atomic="true">
			<div class="d-flex">
				<div class="toast-body">
					<i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
				</div>
				<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
		</div>
	}
</div>


<h2 class="mb-3">Gestion des patients</h2>

<div class="row mb-4 align-items-center">
	<div class="col-md-3">
		<a asp-action="Ajouter" asp-controller="Patient" class="btn btn-outline-primary">
			<i class="bi bi-plus-circle me-2"></i> Ajouter un patient
		</a>
	</div>
	<div class="col-md-9">
		<div class="d-flex justify-content-end align-items-center">
			<form asp-action="Index" method="get" class="d-flex mb-0">
				<div class="input-group">
					<input type="text" name="Filtre" class="form-control" placeholder="Rechercher par nom ou prénon" value="@ViewData["FiltreActuel"]" style="min-width: 350px;" />
					<input type="hidden" name="sortBy" value="@ViewData["ActiveSort"]" />
					<input type="hidden" name="sortDir" value="@ViewData["SortDir"]" />
					<button class="btn btn-outline-primary" type="submit"><i class="bi bi-search"></i></button>
				</div>
			</form>

			<div class="btn-group" role="group">
				<a href="@Url.Action("Index", new { Filtre = ViewData["FiltreActuel"], sortBy = "nom", sortDir = ViewData["SortDir"]?.ToString() == "asc" ? "desc" : "asc" })"
				   class="btn btn-outline-primary @(ViewData["ActiveSort"]?.ToString() == "nom" ? "active" : "")">
					Nom @(ViewData["ActiveSort"]?.ToString() == "nom" ? (ViewData["SortDir"]?.ToString() == "asc" ? "▲" : "▼") : "")
				</a>
				<a href="@Url.Action("Index", new { Filtre = ViewData["FiltreActuel"], sortBy = "prenom", sortDir = ViewData["SortDir"]?.ToString() == "asc" ? "desc" : "asc" })"
				   class="btn btn-outline-primary @(ViewData["ActiveSort"]?.ToString() == "prenom" ? "active" : "")">
					Prénom @(ViewData["ActiveSort"]?.ToString() == "prenom" ? (ViewData["SortDir"]?.ToString() == "asc" ? "▲" : "▼") : "")
				</a>
				<a href="@Url.Action("Index", new {Filtre = ViewData["FiltreActuel"], sortBy = "age", sortDir = ViewData["SortDir"]?.ToString() == "asc" ? "desc" : "asc" })"
				   class="btn btn-outline-primary @(ViewData["ActiveSort"]?.ToString() == "age" ? "active" : "")">
					Âge @(ViewData["ActiveSort"]?.ToString() == "age" ? (ViewData["SortDir"]?.ToString() == "asc" ? "▲" : "▼") : "")
				</a>
			</div>
		</div>
	</div>
</div>

@if(Model.Patients != null && Model.Patients.Any())
{
	<div id="patientListContainer" class="row g-4">
		@foreach (var p in Model.Patients)
		{
			<div class="col-md-3 ">
				<div class="card h-100 shadow-sm" style="border-radius: 20px; overflow: hidden; max-width: 300px; max-height:350px ">
					<div class="d-flex justify-content-center align-items-center mt-3 mb-3" style="height: 200px">
						<img src="@Url.Action("ObtenirPhoto", "Patient", new { id = p.PatientId })"
							 class="card-img-top object-fit-cover rounded-circle border table-bordered"
							 style="height: 180px; width: 180px;" />
					</div>

					<div class="card-body text-center" style="background-color: rgba(71, 85, 105, 0.5);">
						<h5 class="card-title">@p.NomComplet</h5>
						<p class="card-text text-dark">Âge : @p.Age ans</p>

						<div class="d-flex justify-content-center">
							<a asp-action="Detail" asp-controller="Patient" asp-route-id="@p.PatientId"
							   class="btn btn-sm btn-outline-dark m-1"
							   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Détails du patient">
								<i class="bi bi-eye"></i>
							</a>
							<a asp-action="Editer" asp-controller="Patient" asp-route-id="@p.PatientId"
							   class="btn btn-sm btn-outline-dark m-1"
							   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Modifier le patient"> 
								<i class="bi bi-pencil"></i>
							</a>
							<a asp-action="Ajouter" asp-controller="Ordonnance" asp-route-id="@p.PatientId"
							   class="btn btn-sm btn-outline-dark m-1"
							   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Nouvelle ordonnance">
								<i class="bi bi-file-earmark-text"></i>
							</a>
							<a href="#" data-bs-toggle="modal" data-bs-target="#Modal-@p.PatientId">
								<i class="bi bi-trash btn btn-outline-dark btn-sm m-1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Supprimer le patient"></i>
							</a>
							<div class="modal fade" id="Modal-@p.PatientId" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
								<div class="modal-dialog modal-dialog-centered">
									<div class="modal-content">
										<div class="modal-header">
											<h1 class="modal-title fs-5" id="exampleModalLabel">Suppression patient</h1>
											<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
										</div>
										<div class="modal-body">
											Confirmez-vous la suppression du patient : <strong>@p.NomComplet</strong> ?
										</div>
										<div class="modal-footer">
											<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
											<a asp-action="Supprimer"
											   asp-controller="Patient"
											   asp-route-id="@p.PatientId"
											   class="btn btn-danger">
												Confirmer
											</a>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>

	<div class="d-flex justify-content-center mt-4 pagination-container">
		@Html.PagedListPager(
			Model.Patients,
			page => Url.Action("Index", new { page, Filtre = ViewData["FiltreActuel"], SortBy = ViewData["ActiveSort"], sortDir = ViewData["SortDir"] }),
			new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination", "justify-content-center" }, 
				LiElementClasses = new[] { "page-item" }, 
				PageClasses = new[] { "page-link" }, 
				ActiveLiElementClass = "active" 
			}
		)
	</div>
}
else if (Model.Patients != null && !Model.Patients.Any() && string.IsNullOrEmpty(ViewData["FiltreActuel"]?.ToString()))
{
	<div class="d-flex justify-content-center align-items-center" style="height: 50vh;">
		<p class="text-center text-muted fw-bold">Aucun patient ne correspond à votre recherche.</p>
	</div>
}
else
{
	<div class="d-flex justify-content-center align-items-center" style="height: 50vh;">
		<p class="text-center text-muted fw-bold">Aucun patient trouvé pour vous. Veuillez en ajouter.</p>
	</div>

}



