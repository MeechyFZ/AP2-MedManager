@model OrdonnanceViewModel
@{
	ViewData["Title"] = Model.OrdonnanceId == null ? "Créer ordonnance" : "Modifier ordonnance";
}

<div class="d-flex justify-content-center mt-5">
	<div class="card shadow mb-2" style="width: 50%;">
		<div class="card-header text-center">
			<h2>@(Model.OrdonnanceId == null ? "Créer une ordonnance" : "Modifier l'ordonnance")</h2>
		</div>
		<div class="card-body">
			<form asp-action="@(Model.OrdonnanceId == null ? "Ajouter" : "Editer")" method="post">
				<input type="hidden" asp-for="OrdonnanceId" />
				<input type="hidden" asp-for="PatientId" />

				<div class="mb-3 text-center">
					<label class="form-label">
						<strong>Patient :</strong> @Model.NomComplet
						<i class="bi bi-info-circle-fill"
							style="cursor: pointer;"
						   data-bs-toggle="popover" 
						   data-bs-title="Incompatibilités" 
						   data-bs-content="@{
							   var incompatibilites = string.Join(", ", Model.MedicamentsIncompatibles.Select(m => m.Nom));
							   @incompatibilites;
						   }"></i>
					</label>
				</div>

				<div class="row">
					<div class="col-md-6 mb-3">
						<label asp-for="DateDebut" class="form-label"></label>
						<input asp-for="DateDebut" class="form-control @(ViewData.ModelState["DateDebut"]?.Errors.Count > 0 ? "is-invalid" : "")"
							   type="date"
							   min="@DateTime.Now.ToString("yyyy-MM-dd")"
							   value="@DateTime.Now.ToString("yyyy-MM-dd")"
							   id="dateDebut" />
						<span asp-validation-for="DateDebut" class="invalid-feedback"></span>
					</div>
					<div class="col-md-6 mb-3">
						<label asp-for="DateFin" class="form-label"></label>
						<input asp-for="DateFin" class="form-control @(ViewData.ModelState["DateFin"]?.Errors.Count > 0 ? "is-invalid" : "")"
							   type="date"
							   id="dateFin"
							   value="@DateTime.Now.ToString("yyyy-MM-dd")" />
						<span asp-validation-for="DateFin" class="invalid-feedback"></span>
					</div>
				</div>

				<div class="form-group mb-3">
					<label class="form-label" for="ComboBoxMultiselectMedicaments">Médicaments</label>
					<select id="ComboBoxMultiselectMedicaments"
							name="MedicamentIdSelectionnes"
							multiple
							class="@(ViewData.ModelState["MedicamentIdSelectionnes"]?.Errors.Count > 0 ? "is-invalid" : "") tom-select"
							asp-for="MedicamentIdSelectionnes"
							asp-items="@(new SelectList(Model.MedicamentsCompatibles, "MedicamentId", "Nom", Model.MedicamentIdSelectionnes))">
					</select>
					<span asp-validation-for="MedicamentIdSelectionnes" class="invalid-feedback"></span>
				</div>

				<div class="form-group mb-3">
					<label asp-for="InfoSupplementaire" class="form-label"></label>
					<textarea asp-for="InfoSupplementaire" class="form-control "
							  rows="3"
							  placeholder="Ajoutez des informations supplémentaires"></textarea>
				</div>

				<div class="d-flex justify-content-center mt-4">
					<button type="submit" class="btn btn-outline-primary">
						@(Model.OrdonnanceId == null ? "Ajouter" : "Modifier")
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<div class="mt-3 d-flex justify-content-start" style="width: 50%; margin: 0 auto;">
	<a asp-action="Index" class="btn btn-outline-secondary">
		<i class="bi bi-arrow-return-left"> Retour</i>
	</a>
</div>

@section Scripts {
	<script>
		new TomSelect('#ComboBoxMultiselectMedicaments', {
			plugins: ['remove_button'],
			maxOptions: null,
			create: false,
			maxItems: null,
			sortField: { field: "text", direction: "asc" },
			placeholder: "Sélectionner un ou plusieurs médicaments...",
		});
	</script>

	<script>
		const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]')
		const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))

	</script>

}


